{"version":3,"file":"notifier-notification.component.js","sourceRoot":"","sources":["notifier-notification.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\n\nimport { NotifierAnimationData } from './../models/notifier-animation.model';\nimport { NotifierAnimationService } from './../services/notifier-animation.service';\nimport { NotifierConfig } from './../models/notifier-config.model';\nimport { NotifierNotification } from './../models/notifier-notification.model';\nimport { NotifierService } from './../services/notifier.service';\nimport { NotifierTimerService } from './../services/notifier-timer.service';\n\n/**\n * Notifier notification component\n * -------------------------------\n * This component is responsible for actually displaying the notification on screen. In addition, it's able to show and hide this\n * notification, in particular to animate this notification in and out, as well as shift (move) this notification vertically around.\n * Furthermore, the notification component handles all interactions the user has with this notification / component, such as clicks and\n * mouse movements.\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush, // (#perfmatters)\n    host: {\n        '(click)': 'onNotificationClick()',\n        '(mouseout)': 'onNotificationMouseout()',\n        '(mouseover)': 'onNotificationMouseover()',\n        class: 'notifier__notification'\n    },\n    providers: [\n        // We provide the timer to the component's local injector, so that every notification components gets its own\n        // instance of the timer service, thus running their timers independently from each other\n        NotifierTimerService\n    ],\n    selector: 'notifier-notification',\n    template: '<ng-container *ngIf=\"notification.template; else predefinedNotification\" [ngTemplateOutletContext]=\"{ notification: notification }\" [ngTemplateOutlet]=\"notification.template\"></ng-container><ng-template #predefinedNotification><p class=\"notifier__notification-message\">{{ notification.message }}</p><button (click)=\"onClickDismiss()\" *ngIf=\"config.behaviour.showDismissButton\" class=\"notifier__notification-button\" title=\"dismiss\" type=\"button\"><svg class=\"notifier__notification-button-icon\" height=\"20\" viewBox=\"0 0 24 24\" width=\"20\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg></button></ng-template>'\n})\nexport class NotifierNotificationComponent implements AfterViewInit {\n\n\t/**\n\t * Input: Notification object, contains all details necessary to construct the notification\n\t */\n    @Input()\n    public notification: NotifierNotification;\n\n\t/**\n\t * Output: Ready event, handles the initialization success by emitting a reference to this notification component\n\t */\n    @Output()\n    public ready: EventEmitter<NotifierNotificationComponent>;\n\n\t/**\n\t * Output: Dismiss event, handles the click on the dismiss button by emitting the notification ID of this notification component\n\t */\n    @Output()\n    public dismiss: EventEmitter<string>;\n\n\t/**\n\t * Notifier configuration\n\t */\n    public readonly config: NotifierConfig;\n\n\t/**\n\t * Notifier timer service\n\t */\n    private readonly timerService: NotifierTimerService;\n\n\t/**\n\t * Notifier animation service\n\t */\n    private readonly animationService: NotifierAnimationService;\n\n\t/**\n\t * Angular renderer, used to preserve the overall DOM abstraction & independence\n\t */\n    private readonly renderer: Renderer2;\n\n\t/**\n\t * Native element reference, used for manipulating DOM properties\n\t */\n    private readonly element: HTMLElement;\n\n\t/**\n\t * Current notification height, calculated and cached here (#perfmatters)\n\t */\n    private elementHeight: number;\n\n\t/**\n\t * Current notification width, calculated and cached here (#perfmatters)\n\t */\n    private elementWidth: number;\n\n\t/**\n\t * Current notification shift, calculated and cached here (#perfmatters)\n\t */\n    private elementShift: number;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param elementRef               Reference to the component's element\n\t * @param renderer                 Angular renderer\n\t * @param notifierService          Notifier service\n\t * @param notifierTimerService     Notifier timer service\n\t * @param notifierAnimationService Notifier animation service\n\t */\n    public constructor(elementRef: ElementRef, renderer: Renderer2, notifierService: NotifierService,\n        notifierTimerService: NotifierTimerService, notifierAnimationService: NotifierAnimationService) {\n        this.config = notifierService.getConfig();\n        this.ready = new EventEmitter<NotifierNotificationComponent>();\n        this.dismiss = new EventEmitter<string>();\n        this.timerService = notifierTimerService;\n        this.animationService = notifierAnimationService;\n        this.renderer = renderer;\n        this.element = elementRef.nativeElement;\n        this.elementShift = 0;\n    }\n\n\t/**\n\t * Component after view init lifecycle hook, setts up the component and then emits the ready event\n\t */\n    public ngAfterViewInit(): void {\n        this.setup();\n        this.elementHeight = this.element.offsetHeight;\n        this.elementWidth = this.element.offsetWidth;\n        this.ready.emit(this);\n    }\n\n\t/**\n\t * Get the notifier config\n\t *\n\t * @returns Notifier configuration\n\t */\n    public getConfig(): NotifierConfig {\n        return this.config;\n    }\n\n\t/**\n\t * Get notification element height (in px)\n\t *\n\t * @returns Notification element height (in px)\n\t */\n    public getHeight(): number {\n        return this.elementHeight;\n    }\n\n\t/**\n\t * Get notification element width (in px)\n\t *\n\t * @returns Notification element height (in px)\n\t */\n    public getWidth(): number {\n        return this.elementWidth;\n    }\n\n\t/**\n\t * Get notification shift offset (in px)\n\t *\n\t * @returns Notification element shift offset (in px)\n\t */\n    public getShift(): number {\n        return this.elementShift;\n    }\n\n\t/**\n\t * Show (animate in) this notification\n\t *\n\t * @returns Promise, resolved when done\n\t */\n    public show(): Promise<undefined> {\n        return new Promise<undefined>((resolve: () => void, reject: () => void) => {\n\n            // Are animations enabled?\n            if (this.config.animations.enabled && this.config.animations.show.speed > 0) {\n\n                // Get animation data\n                const animationData: NotifierAnimationData = this.animationService.getAnimationData('show', this.notification);\n\n                // Set initial styles (styles before animation), prevents quick flicker when animation starts\n                const animatedProperties: Array<string> = Object.keys(animationData.keyframes[0]);\n                for (let i: number = animatedProperties.length - 1; i >= 0; i--) {\n                    this.renderer.setStyle(this.element, animatedProperties[i],\n                        animationData.keyframes[0][animatedProperties[i]]);\n                }\n\n                // Animate notification in\n                this.renderer.setStyle(this.element, 'visibility', 'visible');\n                const animation: Animation = this.element.animate(animationData.keyframes, animationData.options);\n                animation.onfinish = () => {\n                    this.startAutoHideTimer();\n                    resolve(); // Done\n                };\n\n            } else {\n\n                // Show notification\n                this.renderer.setStyle(this.element, 'visibility', 'visible');\n                this.startAutoHideTimer();\n                resolve(); // Done\n\n            }\n\n        });\n\n    }\n\n\t/**\n\t * Hide (animate out) this notification\n\t *\n\t * @returns Promise, resolved when done\n\t */\n    public hide(): Promise<undefined> {\n        return new Promise<undefined>((resolve: () => void, reject: () => void) => {\n\n            this.stopAutoHideTimer();\n\n            // Are animations enabled?\n            if (this.config.animations.enabled && this.config.animations.hide.speed > 0) {\n                const animationData: NotifierAnimationData = this.animationService.getAnimationData('hide', this.notification);\n                const animation: Animation = this.element.animate(animationData.keyframes, animationData.options);\n                animation.onfinish = () => {\n                    resolve(); // Done\n                };\n            } else {\n                resolve(); // Done\n            }\n\n        });\n    }\n\n\t/**\n\t * Shift (move) this notification\n\t *\n\t * @param   distance         Distance to shift (in px)\n\t * @param   shiftToMakePlace Flag, defining in which direction to shift\n\t * @returns Promise, resolved when done\n\t */\n    public shift(distance: number, shiftToMakePlace: boolean): Promise<undefined> {\n        return new Promise<undefined>((resolve: () => void, reject: () => void) => {\n\n            // Calculate new position (position after the shift)\n            let newElementShift: number;\n            if ((this.config.position.vertical.position === 'top' && shiftToMakePlace)\n                || (this.config.position.vertical.position === 'bottom' && !shiftToMakePlace)) {\n                newElementShift = this.elementShift + distance + this.config.position.vertical.gap;\n            } else {\n                newElementShift = this.elementShift - distance - this.config.position.vertical.gap;\n            }\n            const horizontalPosition: string = this.config.position.horizontal.position === 'middle' ? '-50%' : '0';\n\n            // Are animations enabled?\n            if (this.config.animations.enabled && this.config.animations.shift.speed > 0) {\n                const animationData: NotifierAnimationData = { // TODO: Extract into animation service\n                    keyframes: [\n                        {\n                            transform: `translate3d( ${horizontalPosition}, ${this.elementShift}px, 0 )`\n                        },\n                        {\n                            transform: `translate3d( ${horizontalPosition}, ${newElementShift}px, 0 )`\n                        }\n                    ],\n                    options: {\n                        duration: this.config.animations.shift.speed,\n                        easing: this.config.animations.shift.easing,\n                        fill: 'forwards'\n                    }\n                };\n                this.elementShift = newElementShift;\n                const animation: Animation = this.element.animate(animationData.keyframes, animationData.options);\n                animation.onfinish = () => {\n                    resolve(); // Done\n                };\n\n            } else {\n                this.renderer.setStyle(this.element, 'transform', `translate3d( ${horizontalPosition}, ${newElementShift}px, 0 )`);\n                this.elementShift = newElementShift;\n                resolve(); // Done\n            }\n\n        });\n\n    }\n\n\t/**\n\t * Handle click on dismiss button\n\t */\n    public onClickDismiss(): void {\n        this.dismiss.emit(this.notification.id);\n    }\n\n\t/**\n\t * Handle mouseover over notification area\n\t */\n    public onNotificationMouseover(): void {\n        if (this.config.behaviour.onMouseover === 'pauseAutoHide') {\n            this.pauseAutoHideTimer();\n        } else if (this.config.behaviour.onMouseover === 'resetAutoHide') {\n            this.stopAutoHideTimer();\n        }\n    }\n\n\t/**\n\t * Handle mouseout from notification area\n\t */\n    public onNotificationMouseout(): void {\n        if (this.config.behaviour.onMouseover === 'pauseAutoHide') {\n            this.continueAutoHideTimer();\n        } else if (this.config.behaviour.onMouseover === 'resetAutoHide') {\n            this.startAutoHideTimer();\n        }\n    }\n\n\t/**\n\t * Handle click on notification area\n\t */\n    public onNotificationClick(): void {\n        if (this.config.behaviour.onClick === 'hide') {\n            this.onClickDismiss();\n        }\n    }\n\n\t/**\n\t * Start the auto hide timer (if enabled)\n\t */\n    private startAutoHideTimer(): void {\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.start(this.config.behaviour.autoHide).then(() => {\n                this.onClickDismiss();\n            });\n        }\n    }\n\n\t/**\n\t * Pause the auto hide timer (if enabled)\n\t */\n    private pauseAutoHideTimer(): void {\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.pause();\n        }\n    }\n\n\t/**\n\t * Continue the auto hide timer (if enabled)\n\t */\n    private continueAutoHideTimer(): void {\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.continue();\n        }\n    }\n\n\t/**\n\t * Stop the auto hide timer (if enabled)\n\t */\n    private stopAutoHideTimer(): void {\n        if (this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0) {\n            this.timerService.stop();\n        }\n    }\n\n\t/**\n\t * Initial notification setup\n\t */\n    private setup(): void {\n\n        // Set start position (initially the exact same for every new notification)\n        if (this.config.position.horizontal.position === 'left') {\n            this.renderer.setStyle(this.element, 'left', `${this.config.position.horizontal.distance}px`);\n        } else if (this.config.position.horizontal.position === 'right') {\n            this.renderer.setStyle(this.element, 'right', `${this.config.position.horizontal.distance}px`);\n        } else {\n            this.renderer.setStyle(this.element, 'left', '50%');\n            // Let's get the GPU handle some work as well (#perfmatters)\n            this.renderer.setStyle(this.element, 'transform', 'translate3d( -50%, 0, 0 )');\n        }\n        if (this.config.position.vertical.position === 'top') {\n            this.renderer.setStyle(this.element, 'top', `${this.config.position.vertical.distance}px`);\n        } else {\n            this.renderer.setStyle(this.element, 'bottom', `${this.config.position.vertical.distance}px`);\n        }\n\n        // Add classes (responsible for visual design)\n        this.renderer.addClass(this.element, `notifier__notification--${this.notification.type}`);\n        this.renderer.addClass(this.element, `notifier__notification--${this.config.theme}`);\n\n    }\n\n}\n"]}