{"version":3,"file":"notifier-animation.model.js","sourceRoot":"","sources":["notifier-animation.model.ts"],"names":[],"mappings":"","sourcesContent":["import { NotifierNotification } from './notifier-notification.model';\n\n/**\n * Notifier animation data\n *\n * This interface describes an object containing all information necessary to run an animation, in particular to run an animation with the\n * all new (shiny) Web Animations API. When other components or services request data for an animation they have to run, this is the object\n * they get back from the animation service.\n *\n * Technical sidenote:\n * Nope, it's not a coincidence - the structure looks similar to the Web Animation API syntax.\n */\nexport interface NotifierAnimationData {\n\n\t/**\n\t * Animation keyframes; the first index ctonaining changes for animate-in, the second index those for animate-out\n\t */\n    keyframes: Array<{\n        [animatablePropertyName: string]: string;\n    }>;\n\n\t/**\n\t * Futher animation options\n\t */\n    options: {\n\n\t\t/**\n\t\t * Animation duration, in ms\n\t\t */\n        duration: number;\n\n\t\t/**\n\t\t * Animation easing function (comp. CSS easing functions)\n\t\t */\n        easing?: 'linear' | 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out' | string;\n\n\t\t/**\n\t\t * Animation fill mode\n\t\t */\n        fill: 'none' | 'forwards' | 'backwards';\n\n    };\n\n}\n\n/**\n * Notifier animation preset\n *\n * This interface describes the structure of an animation preset, defining the keyframes for both animating-in and animating-out. Animation\n * presets are always defined outside the animation service, and therefore one day may become part of some new API.\n */\nexport interface NotifierAnimationPreset {\n\n\t/**\n\t * Function generating the keyframes for animating-out\n\t */\n    hide: (notification: NotifierNotification) => NotifierAnimationPresetKeyframes;\n\n\t/**\n\t * Function generating the keyframes for animating-in\n\t */\n    show: (notification: NotifierNotification) => NotifierAnimationPresetKeyframes;\n\n}\n\n/**\n * Notifier animation keyframes\n *\n * This interface describes the data, in particular all the keyframes animation presets return.\n */\nexport interface NotifierAnimationPresetKeyframes {\n\n\t/**\n\t * CSS attributes before the animation starts\n\t */\n    from: {\n        [animatablePropertyName: string]: string;\n    };\n\n\t/**\n\t * CSS attributes after the animation ends\n\t */\n    to: {\n        [animatablePropertyName: string]: string;\n    };\n\n}\n"]}