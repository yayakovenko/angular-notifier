{"version":3,"file":"notifier-notification.model.js","sourceRoot":"","sources":["notifier-notification.model.ts"],"names":[],"mappings":";;;;;;;;;AAQA,MAAM;;;;;;gBAqCiB,OAAoC;;;;;wBAZlB,IAAI;QAarC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;;;QAK7B,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,EAAE,GAAG,MAAM,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC;SAC1C;;CAER","sourcesContent":["import { NotifierNotificationComponent } from './../components/notifier-notification.component';\nimport { TemplateRef } from '@angular/core';\n\n/**\n * Notification\n *\n * This class describes the structure of a notifiction, including all information it needs to live, and everyone else needs to work with it.\n */\nexport class NotifierNotification {\n\t/**\n\t * Unique notification ID, can be set manually to control the notification from outside later on\n\t */\n    public id: string;\n\n\t/**\n\t * Notification type, will be used for constructing an appropriate class name\n\t */\n    public type: string;\n\n\t/**\n\t * Notification message\n\t */\n    public message: string;\n\n\t/**\n\t * Notification data\n\t */\n    public data: any;\n\n\t/**\n\t * The template to customize\n\t * the appearance of the notification\n\t */\n    public template?: TemplateRef<any> = null;\n\n\t/**\n\t * Component reference of this notification, created and set during creation time\n\t */\n    public component: NotifierNotificationComponent;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param options Notifier options\n\t */\n    public constructor(options: NotifierNotificationOptions) {\n        Object.assign(this, options);\n\n        // If not set manually, we have to create a unique notification ID by ourselves. The ID generation relies on the current browser\n        // datetime in ms, in praticular the moment this notification gets constructed. Concurrency, and thus two IDs being the exact same,\n        // is not possible due to the action queue concept.\n        if (options.id === undefined) {\n            this.id = `ID_${new Date().getTime()}`;\n        }\n    }\n}\n\n/**\n * Notifiction options\n *\n * This interface describes which information are needed to create a new notification, or in other words, which information the external API\n * call must provide.\n */\nexport interface NotifierNotificationOptions {\n\t/**\n\t * Notification ID, optional\n\t */\n    id?: string;\n\n\t/**\n\t * Notification type\n\t */\n    type: string;\n\n\t/**\n\t * Notificatin message\n\t */\n    message: string;\n\n\t/**\n\t * Notification data\n\t */\n    data?: any;\n\n\t/**\n\t * The template to customize\n\t * the appearance of the notification\n\t */\n    template?: TemplateRef<any>;\n}\n"]}